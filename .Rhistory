if(input$disp == "head") {
return(head(df))
}
else {
return(df)
}
})
}
# Create Shiny app ----
shinyApp(ui, server)
runApp()
a <- list(1)
do.call(log,a)
a <- list(1,2)
do.call(log,a)
a
log(1,2)
log(1)
sum(1)
sum(1,2)
log(y=1)
log(x=1,y=1)
x = c(1:4)
BoostedHP(x)
getwd()
rawdata <- read.csv("data/IRE.csv")
rawdata
class(rawdata)
rawdata <- read.csv("data/IRE.csv", header = F)
arg <- rawdata
arg$lambda = 1600
arg
arg$test_type = "adf"
arg$sig_p <- 0.05
arg$Max_Iter = 10
do.call(BoostedHP,arg)
do.call(Boosted, rawdata)
do.call(BoostedHP, rawdata)
runApp()
rawdata
as.numeric(rawdata)
rawdata[,1]
runApp()
do.call(BoostedHP, arg)
arg$x <- rawdata
bt_results <- do.call(BoostedHP, arg)
arg
arg <- list()
arg$x <- rawdata
arg$lambda = 1600
arg$test_type = "BIC"
arg$sig_p = 0.05
arg$Max_Iter = 10
do.call(BoostedHP, arg)
rawdata <- rawdara[,1]
rawdata <- rawdata[,1]
arg$x <- rawdata
do.call(BoostedHP, arg)
bt_results <- do.call(BoostedHP, arg)
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], input$Type)
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "none")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "adf")
Boostedplot()
Boostedplot
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
)
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
trend <- bt_results[[2]]
p_history <- bt_results[[4]]
plot_type = "Time Series"
if(plot_type == "Time Series"){
leg <- length(rawdata)
leg_p <- length(p_history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Sys.Date() + 1:leg)
plot(bx)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
lines(as.xts(p_history, Sys.Date()+1:leg_p), type="h", on=NA,col = "blue")
# add legend
addLegend("topleft", on=1,
legend.names = c("trend","raw data", "p value histroy"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red" , "blue"))
}
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
if(plot_type == "Plain"){
message("under developing")
}
if(plot_type == "Time Series"){
leg <- length(rawdata)
leg_p <- length(p_history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Sys.Date() + 1:leg)
pl <- plot(bx)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
lines(as.xts(p_history, Sys.Date()+1:leg_p), type="h", on=NA,col = "blue")
# add legend
addLegend("topleft", on=1,
legend.names = c("trend","raw data", "p value histroy"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red" , "blue"))
}
if(plot_type == "Time Series"){
leg <- length(rawdata)
leg_p <- length(p_history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Sys.Date() + 1:leg)
pl <- plot(bx)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
lines(as.xts(p_history, Sys.Date()+1:leg_p), type="h", on=NA,col = "blue")
# add legend
addLegend("topleft", on=1,
legend.names = c("trend","raw data", "p value histroy"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red" , "blue"))
}
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
a <- Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
a
a <- Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "plain")
a
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "plain")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Plain")
print(plot(bx))
lines(as.xts(p_history, Sys.Date()+1:leg_p), type="h", on=NA,col = "blue")
source("plot_all.R")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Plain")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
source("plot_all.R")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
source("plot_all.R")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
runApp()
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
Boostedplot(rawdata, bt_results[[2]], bt_results[[4]], "Time Series")
arg$test_type
arg$sig_p
arg$Max_Iter
runApp()
p_history
arg$Max_Iter
arg$Max_Iter <- 100
do.call(BoostedHP,arg)
bt_results$test_type
bt_results$test_type
bx
trend <- bt_results$trend
test_type <- bt_results$test_type
ata.frame(trend = trend,raw_data=rawdata)
data.frame(trend = trend,raw_data=rawdata)
as.xts(bx, Sys.Date() + 1:leg)
plot(bx)
bx <- data.frame(trend = trend,raw_data=rawdata)
plot(bx)
bx
as.xts(bx, Sys.Date() + 1:leg)
trend <- bt_results$trend_hist
data.frame(trend = trend,raw_data=rawdata)
trend
x <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Sys.Date() + 1:leg)
plot(bx)
bx
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Sys.Date() + 1:leg)
plot(bx)
lines(as.xts(p_history, Sys.Date()+1:leg_p), type="h", on=NA,col = "blue")
1:leg_p
tsplot(bx)
ts.plot(bx)
plot(bx)
runApp()
runApp()
bt_results$trend_hist
trend <- bt_results$trend_hist
test_type <- bt_results$test_type
if (test_type == "BIC"){
history <- bt_results$IC_hist
legend_hist <- "IC history"
}
if (test_type == "adf"){
history <- bt_results$adf_p_hist
legend_hist <- "p-value history"
}
history
leg <- length(rawdata)
leg_h <- length(history)
length(history)
data.frame(trend = trend,raw_data=rawdata)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, date + 1:leg)
date
ts(1:3,start = "2010-06-12", frequency = 12)
ts(1:3,start = as.Date("2010-06-12"), frequency = 12)
1 <- ts(1:3,start = as.Date("2010-06-12"), frequency = 12)
a <- ts(1:3,start = as.Date("2010-06-12"), frequency = 12)
a[1]
a[2]
class(a)
a <- as.Date(ts(1:3,start = as.Date("2010-06-12"), frequency = 12))
s<-as.Date("2017-05-01")
date<-seq(from=s,by=1,length.out=365)
date
s<-as.Date("2017-05-01")
date<-seq(from=s,by=12,length.out=365)
date
s<-as.Date("2017-05-01")
date<-seq(from=s,by=12,length.out=3)
date
seq(from=s,by=1,length.out=3)
seq(from=s,by=385,length.out=3)
seq(from=s,by=1,length.out=12)
seq(from=s,by=2,length.out=12)
library(zoo)
ts(1,frequency=365,start=(2011,1))
ts(1,frequency=365,start=c(2011,1))
ts(1:2,frequency=365,start=c(2011,1))
runApp()
bt_results[[2]]
summary(bt_results[[2]])
a <- summary(bt_results[[2]])
a
view(a)
View(a)
class(a)
a <- table()
output <- data.frame()
output$cycle <- bt_results$cycle
bt_results$cycle
output$cycle <- bt_results$cycle
data.frame()
runApp()
runApp()
leg <- length(rawdata)
leg_h <- length(history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Date + 1:leg)
par(mfrow=c(2,1))
pl <- plot(bx)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
# lines(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
# add legend
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
leg <- length(rawdata)
leg_h <- length(history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Date + 1:leg)
par(mfrow=c(2,1))
pl <- plot(bx)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
# lines(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
# add legend
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
par(mfrow=c(2,1))
pl <- plot(bx)
leg <- length(rawdata)
leg_h <- length(history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, Date + 1:leg)
Date = "2014-01-01"
as.xts(bx, Date + 1:leg)
Date
as.Date(Date) + 1:leg
as.xts(bx, as.Date(Date) + 1:leg)
leg <- length(rawdata)
leg_h <- length(history)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, as.Date(Date) + 1:leg)
pl <- plot(bx)
plot(bx)
par(mfrow=c(2,1))
pl <- plot(bx)
plot(bx)
par(mfrow=c(1,2))
pl <- plot(bx)
par(mfrow=c(2,1))
pl <- plot(bx)
par(mfrow=c(2,1))
pl <- plot(bx)
par(mfrow=c(2,1))
pl <- plot(bx)
plot(bx)
opar = par(mfrow=c(2,1))
pl1 <- plot(bx)
pl2 <- plot(bx)
plot(pl1)
plot(pl2)
opar = par(mfrow=c(1,1))
pl1 <- plot(bx)
pl2 <- plot(bx)
plot(pl1)
opar = par(mfrow=c(2,2))
pl1 <- plot(bx)
pl2 <- plot(bx)
plot(pl1, hang = -1)
plot(pl2, hang = -1)
opar = par(mfrow=c(2,1))
pl1 <- plot(bx)
pl2 <- plot(bx)
plot(pl1, hang = -1)
plot(pl2, hang = -1)
opar = par(mfrow=c(1,2))
pl1 <- plot(bx)
pl2 <- plot(bx)
plot(pl1, hang = -1)
plot(pl2, hang = -1)
ggplot2(bx)
library(ggplot2)
pl1 <- ggplot2(bx)
pl1 <- ggplot(bx)
pl1 <- ggplot(bx)
print(pl1)
bx
pl1 <- ggplot(bx, group = trend)
print(pl1)
bx <- data.frame(trend = trend,raw_data=rawdata)
bx <- as.xts(bx, as.Date(Date) + 1:leg)
opar = par(mfrow=c(1,2))
pl1 <- plot(bx, group = trend)
print(pl1)
help("plot")
ts.plot(bx)
plot()
lines(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
plot()
plot()
lines(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
plot(pl1, hang = -1)
#as.xts(bx_ADF$adf_p_hist, Sys.Date()+1:leg_p)
lines(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
plot(pl1, hang = -1)
bar(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
barplot(as.xts(history, date + 0:(leg_h-1)), type="h", on=NA,col = "blue")
history
pl2 <- barplot(as.xts(history, 1:bt_results$iter_num), type="h", on=NA,col = "blue")
as.xts(history, 1:bt_results$iter_num)
history
barplot(history, 1:bt_results$iter_num)
plot(history, 1:bt_results$iter_num, type="h", on=NA,col = "blue")
plot(history, 1:length(history), type="h", on=NA,col = "blue")
pl2 <- plot(history, type="h", on=NA,col = "blue")
pl2 <- plot(history, type="h", on=NA,col = "blue")
warnings()
plot(history, type="h", col = "blue")
plot(history, type="h", col = "blue", lwd = 15)
plot(history, type="h", col = "blue", lwd = 15, lend = 2)
plot(bx)
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
pl2 <- plot(history, type="h", col = "blue", lwd = 15, lend = 2)
opar = par(mfrow=c(1,2))
pl1 <- plot(bx)
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
pl2 <- plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
plot(pl1, hang = -1)
plot(pl2, hang = -1)
pl2 <- plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
addLegend("topleft", on=1,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
pl2 <- plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
addLegend("topleft", on=1,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
pl2 <- plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
addLegend("topleft", on=1,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
addLegend("topleft", on=1,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
addLegend("topleft", on=2,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
addLegend("topleft", on=2,
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
addLegend("topleft",
legend.names = legend_hist,
lty=c(1, 1), lwd=c(2, 1),
col=c("blue"))
plot(history, type="h",
col = "blue", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
opar = par(mfrow=c(2,1))
pl1 <- plot(bx)
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
pl2 <- plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
opar = par(mfrow=c(2,2))
pl1 <- plot(bx)
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
pl2 <- plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
pl2 <- plot(as.xts(history,1:length(history)), type="h",
col = "purple", lwd = 15, lend = 2)
as.xts(history,1:length(history))
as.xts(history,1:length(history))
as.xts(history)
as.xts(history)
as.xts(history)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
plot(history, type="h",
col = "purple", lwd = 15, lend = 2)
runApp()
out <- list()
out$cycle <- bt_results$cycle
out$trend <- bt_results$trend
out$trend_history <- bt_results$trend_hist
as.data.frame(out)
bt_results$iter_num
runApp()
runApp()
runApp()
runApp()
setwd("D:\\mzw\\github_repo\\Boosted_HP_App")
rm(list=())
rm(list())
runApp()
runApp()
runApp()
do.call(BoostedHP, arg)
Boostedplot(bt_results, "trend")
Boostedplot(bt_results, "trend")
cycle <- bt_results$cycle
trend <- bt_results$trend_hist
rawdata <- cycle + bt_results$trend
test_type <- bt_results$test_type
if (test_type == "BIC"){
history <- bt_results$IC_hist
legend_hist <- "BIC history"
}
if (test_type == "adf"){
history <- bt_results$adf_p_hist
legend_hist <- "p-value history"
}
bx <- data.frame(trend = trend_hist,raw_data=rawdata)
bx <- as.xts(bx, as.Date(Date) + 1:leg)
trend_hist <- bt_results$trend_hist
data.frame(trend = trend_hist,raw_data=rawdata)
bx <- data.frame(trend = trend_hist,raw_data=rawdata)
bx <- as.xts(bx, as.Date(Date) + 1:leg)
pl <- plot(bx)
addLegend("topleft", on=1,
legend.names = c("trend","raw data"),
lty=c(1, 1), lwd=c(2, 1),
col=c("black", "red"))
